import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    static int N, k, idx;
    static int[] arr, cmp;

    private static void input() throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        StringTokenizer stk = new StringTokenizer(br.readLine());
        k = Integer.parseInt(stk.nextToken());
        arr = new int[N];
        for (int i = 1; i <= N; i++) {
            arr[i-1] = i;
        }
        if (k == 1) {
            idx = Integer.parseInt(stk.nextToken());
        } else {
            idx = 0;
            cmp = new int[N];
            for (int i = 0; i < N; i++)
                cmp[i] = Integer.parseInt(stk.nextToken());
        }
    }

    private static void perm(int d) {
        if (d == N) {
            if (k == 1) {
                if(--idx == 0) printArr();
            } else {
                ++idx;
                if(check()) printIdx();
            }
            return;
        }

        for (int i = d; i < N; i++) {
            swap(i, d);
            perm(d + 1);
            swap(i, d);
        }
    }

    private static void swap(int n1, int n2) {
        int tmp = arr[n1];
        arr[n1] = arr[n2];
        arr[n2] = tmp;
    }

    private static void printArr() {
        for(int i=0; i<N; i++) {
            System.out.print(arr[i]+" ");
        }
        System.exit(0);
    }

    private static void printIdx() {
        System.out.println(idx);
        System.exit(0);
    }

    private static boolean check() {
        int idx = 0;
        while(idx != N) {
            if(arr[idx] != cmp[idx++]) break;
        }
        return idx == N;
    }

    public static void main(String[] args) throws Exception {
        input();
        perm(0);
    }
}
